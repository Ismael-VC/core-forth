: CELL+ 4 + ;
: CELLS 4 * ;
: CHAR+ 1 + ;
: CHARS ;

: HERE  0 CELLS ;
: PAD   3 CELLS ;
: >IN   6 CELLS ;
: STATE 9 CELLS ;

: 1+  1 + ;
: 1- -1 + ;
: 2*  2 * ;
: 2/  2 / ;

: DUP 7 CELLS @ CELL+ @ ;
: OVER 7 CELLS @ 2 CELLS + @ ;
: DROP 7 CELLS @ 2 CELLS + 7 CELLS ! ;
: SWAP OVER OVER 7 CELLS @ 4 CELLS + ! 7 CELLS @ 2 CELLS + ! ;

: R@ 4 CELLS @ 2 CELLS + @ ;
: >R R@ SWAP 4 CELLS @ CELL+ ! 4 CELLS @ ! ;
: R> 4 CELLS @ 2 CELLS + DUP @ SWAP R@ SWAP ! 4 CELLS DUP @ 2 CELLS + SWAP ! ;

: ROT >R SWAP R> SWAP ;
: TUCK DUP ROT SWAP ;
: NIP SWAP DROP ;

: 2>R R> ROT >R SWAP >R >R ;
: 2R@ R> R> R@ SWAP DUP >R ROT >R ;
: 2R> R> R> R> SWAP ROT >R ;

: 2DUP OVER OVER ;
: 2DROP DROP DROP ;
: 2SWAP >R ROT ROT R> ROT ROT ;
: 2OVER 2SWAP 2>R 2R@ 2SWAP 2R> ;

: INVERT DUP NAND ;
: NEGATE INVERT 1+ ;
: AND NAND INVERT ;
: OR INVERT SWAP INVERT NAND ;
: XOR 2DUP OR ROT ROT NAND AND ;
: FALSE 0 ;
: TRUE -1 ;
: - NEGATE + ;
: 0> NEGATE 0< ;
: 0= DUP 0< SWAP 0> OR INVERT ;
: = - 0= ;
: <> = INVERT ;
: 0<> 0= INVERT ;
: < - 0< ;
: > - 0> ;

: C@ @ 255 AND ;
: C! DUP @ 255 INVERT AND ROT + SWAP ! ;

: , HERE @ ! HERE @ CELL+ HERE ! ;
: C, HERE @ C! HERE @ 1+ HERE ! ;
: +! SWAP OVER @ + SWAP ! ;
: 2! SWAP OVER ! CELL+ ! ;
: 2@ DUP CELL+ @ SWAP @ ;

: COMPILE, , ;
: LIT@ R> DUP CELL+ >R @ ;

: IMMEDIATE 1 CELLS @ CELL+ DUP @ 128 OR SWAP ! ;
: [ 0 STATE ! ; IMMEDIATE
: ] 1 STATE ! ;

: JUMP R> DUP @ + >R ;
: ?JUMP 0= R@ @ -1 CELLS + AND R> + CELL+ >R ;
: JUMP! LIT@ DUP , LIT@ HERE , LIT@ @ , LIT@ SWAP , LIT@ - ,
        LIT@ LIT@ , , LIT@ + , LIT@ SWAP , LIT@ ! , ;
: IF LIT@ ?JUMP , HERE @ 0 , ; IMMEDIATE
: ELSE LIT@ JUMP , HERE @ 0 , SWAP [ 0 JUMP! ] ; IMMEDIATE
: THEN [ 0 JUMP! ] ; IMMEDIATE

: BEGIN HERE @ ; IMMEDIATE
: AGAIN LIT@ JUMP , HERE @ - , ; IMMEDIATE
: UNTIL LIT@ ?JUMP , HERE @ - , ; IMMEDIATE
: WHILE LIT@ ?JUMP , HERE @ 0 , SWAP ; IMMEDIATE
: REPEAT LIT@ JUMP , HERE @ - , [ 0 JUMP! ] ; IMMEDIATE

: DO HERE @ LIT@ >R , LIT@ >R , R> 0 >R >R ; IMMEDIATE
: ?DO HERE @ LIT@ 2DUP , LIT@ = , LIT@ ?JUMP , 4 CELLS , LIT@ 2DROP ,
      LIT@ JUMP , R> HERE @ 0 , LIT@ >R , LIT@ >R , >R 1 >R >R ; IMMEDIATE
: UNLOOP R> R> R> 2DROP >R ;
: LEAVE LIT@ UNLOOP , LIT@ JUMP , R> R> 1+ HERE @ 0 , >R >R >R ; IMMEDIATE
: LOOP R> R> BEGIN DUP 0<> WHILE 1- R> [ 8 CELLS JUMP! ] REPEAT
       DROP >R LIT@ R> , LIT@ R> , LIT@ 1+ , LIT@ 2DUP , LIT@ = ,
       LIT@ ?JUMP , HERE @ - , LIT@ 2DROP , ; IMMEDIATE
: +LOOP R> R> BEGIN DUP 0<> WHILE 1- R> [ 10 CELLS JUMP! ] REPEAT
        DROP >R LIT@ R> , LIT@ R> ,
        LIT@ ROT , LIT@ + , LIT@ 2DUP , LIT@ > , LIT@ INVERT ,
        LIT@ ?JUMP , HERE @ - , LIT@ 2DROP , ; IMMEDIATE
: I R> R> R@ SWAP >R SWAP >R ;
: J R> R> R> R> R@ SWAP >R SWAP >R SWAP >R SWAP >R ;

: CASE 0 ; IMMEDIATE
: OF LIT@ OVER , LIT@ = , LIT@ ?JUMP , HERE @ 0 , LIT@ DROP , ; IMMEDIATE
: ENDOF LIT@ JUMP , HERE @ 0 , SWAP [ 0 JUMP! ] SWAP 1+ ; IMMEDIATE
: ENDCASE LIT@ DROP , 0 ?DO [ 0 JUMP! ] LOOP ; IMMEDIATE

: ABS DUP 0< IF NEGATE THEN ;
: MIN 2DUP > IF SWAP THEN DROP ;
: MAX 2DUP < IF SWAP THEN DROP ;
: MOD 2DUP / * - ;
: S>D 0 ;

: ALIGNED DUP 1 CELLS MOD DUP IF - CELL+ ELSE DROP THEN ;
: ALIGN HERE @ ALIGNED HERE ! ;
: >BODY CELL+ DUP @ 31 AND + 1+ ALIGNED ;
: RECURSE 10 CELLS @ >BODY , ; IMMEDIATE

: ?DUP DUP IF DUP THEN ;
: DEPTH 8 CELLS @ 7 CELLS @ - 1 CELLS / 2 - ;
: PICK DUP 0= IF DROP DUP EXIT THEN SWAP >R 1- RECURSE R> SWAP ;
: ROLL DUP 0= IF DROP EXIT THEN SWAP >R 1- RECURSE R> SWAP ;

: ALLOT HERE @ + HERE ! ;
: FILL SWAP >R SWAP R> 0 ?DO 2DUP C! 1+ LOOP 2DROP ;
: MOVE 0 ?DO 2DUP SWAP @ SWAP C! SWAP 1+ SWAP 1+ LOOP 2DROP ;
: ERASE 0 FILL ;
: UNUSED 2 CELLS @ HERE @ - ;

: CREATE : LIT@ LIT@ , HERE @ 2 CELLS + ,
         LIT@ EXIT , 10 CELLS @ 1 CELLS ! 0 STATE ! ;
: DOES> LIT@ LIT@ ,           1 ,  LIT@ CELLS ,  LIT@     @ ,  LIT@ >BODY ,
        LIT@ LIT@ ,  LIT@  JUMP ,  LIT@  OVER ,  LIT@     ! ,  LIT@ CELL+ ,
        LIT@ HERE ,  LIT@     @ ,  LIT@  OVER ,  LIT@     - ,  LIT@  OVER ,
        LIT@    ! ,  LIT@  LIT@ ,           2 ,  LIT@ CELLS ,  LIT@     + ,
        LIT@ LIT@ ,  LIT@  LIT@ ,  LIT@     , ,  LIT@     , ,  LIT@  LIT@ ,
        LIT@ JUMP ,  LIT@     , ,  LIT@  LIT@ ,      HERE @ 6 CELLS + ,
        LIT@ HERE ,  LIT@     @ ,  LIT@     - ,  LIT@     , ,  LIT@  EXIT ,
        ; IMMEDIATE
: VARIABLE CREATE 0 , ;
: CONSTANT CREATE , DOES> @ ;
: BUFFER: CREATE ALLOT ;

VARIABLE BASE
: DECIMAL 10 BASE ! ;
: HEX 16 BASE ! ;
DECIMAL

: BL 32 ;
: CR 10 EMIT ;
: SPACE BL EMIT ;
: SPACES 0 ?DO SPACE LOOP ;
: TYPE 0 ?DO DUP C@ EMIT 1+ LOOP DROP ;
: COUNT DUP C@ SWAP 1+ SWAP ;
: WORD >R 2 CELLS @ DUP 1+
       BEGIN KEY DUP R@ = WHILE DROP REPEAT OVER C! 1+
       BEGIN KEY DUP R@ <> WHILE OVER C! 1+ REPEAT DROP
       OVER - 1- OVER C! R> DROP ;
: CHAR BL WORD 1+ C@ ;
: [CHAR] LIT@ LIT@ , CHAR , ; IMMEDIATE
: ( BEGIN KEY [CHAR] ) = UNTIL ; IMMEDIATE
: \ BEGIN KEY 10 = UNTIL ; IMMEDIATE

: LITSTRING R> DUP CELL+ >R ; ( TODO )
: ." [CHAR] " PARSE STATE @ IF
       LIT@ LITSTRING , DUP , 0 DO DUP C@ C, 1+ LOOP DROP LIT@ TYPE ,
     ELSE
       TYPE
     THEN ; IMMEDIATE

: ENVIRONMENT? 2DROP FALSE ;
