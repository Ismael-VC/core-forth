: CELL+ 4 + ;
: CELLS 4 * ;
: CHAR+ 1 + ;
: CHARS 1 * ;

: HERE  0 CELLS ;
: PAD   2 CELLS ;
: >IN   5 CELLS ;
: STATE 8 CELLS ;

: 1+  1 + ;
: 1- -1 + ;
: 2*  2 * ;
: 2/  2 / ;

: DUP 6 CELLS @ CELL+ @ ;
: OVER 6 CELLS @ 2 CELLS + @ ;
: DROP 6 CELLS @ 2 CELLS + 6 CELLS ! ;
: 2DUP OVER OVER ;
: 2DROP DROP DROP ;
: SWAP 2DUP 6 CELLS @ 4 CELLS + ! 6 CELLS @ 2 CELLS + ! ;
: NIP SWAP DROP ;

: R@ 3 CELLS @ 2 CELLS + @ ;
: >R R@ SWAP 3 CELLS @ CELL+ ! 3 CELLS @ ! ;
: R> 3 CELLS @ 2 CELLS + DUP @ SWAP R@ SWAP ! 3 CELLS DUP @ 2 CELLS + SWAP ! ;

: ROT >R SWAP R> SWAP ;
: -ROT ROT ROT ;
: TUCK DUP ROT SWAP ;

: 2>R R> ROT >R SWAP >R >R ;
: 2R@ R> R> R@ SWAP DUP >R ROT >R ;
: 2R> R> R> R> SWAP ROT >R ;
: 2SWAP >R -ROT R> -ROT ;
: 2OVER 2SWAP 2>R 2R@ 2SWAP 2R> ;

: INVERT DUP NAND ;
: NEGATE INVERT 1+ ;
: AND NAND INVERT ;
: OR INVERT SWAP INVERT NAND ;
: XOR 2DUP OR -ROT NAND AND ;
: FALSE 0 ;
: TRUE -1 ;
: - NEGATE + ;
: 0> NEGATE 0< ;
: 0= DUP 0< SWAP 0> OR INVERT ;
: = - 0= ;
: <> = INVERT ;
: 0<> 0= INVERT ;
: < - 0< ;
: > - 0> ;

: C@ @ 255 AND ;
: C! DUP @ 255 INVERT AND ROT + SWAP ! ;

: , HERE @ ! HERE @ CELL+ HERE ! ;
: C, HERE @ C! HERE @ 1+ HERE ! ;
: +! SWAP OVER @ + SWAP ! ;
: 2! SWAP OVER ! CELL+ ! ;
: 2@ DUP CELL+ @ SWAP @ ;

: COMPILE, , ;
: LIT@ 3 CELLS @ CELL+ @ DUP CELL+ 3 CELLS @ CELL+ ! @ ;

: IMMEDIATE 1 CELLS @ CELL+ DUP @ 128 OR SWAP ! ;
: [ 0 STATE ! ; IMMEDIATE
: ] 1 STATE ! ;

: BRANCH R> DUP @ + >R ;
: ?BRANCH 0= R@ @ -1 CELLS + AND R@ + CELL+ 3 CELLS @ CELL+ ! ;
: IF LIT@ ?BRANCH , HERE @ 0 , ; IMMEDIATE
: ELSE LIT@ BRANCH , HERE @ 0 , SWAP DUP HERE @ SWAP - SWAP ! ; IMMEDIATE
: THEN DUP HERE @ SWAP - SWAP ! ; IMMEDIATE
: BEGIN HERE @ ; IMMEDIATE
: AGAIN LIT@ BRANCH , HERE @ - , ; IMMEDIATE
: UNTIL LIT@ ?BRANCH , HERE @ - , ; IMMEDIATE
: WHILE LIT@ ?BRANCH , HERE @ 0 , SWAP ; IMMEDIATE
: REPEAT LIT@ BRANCH , HERE @ - , DUP HERE @ SWAP - SWAP ! ; IMMEDIATE
: DO HERE @ LIT@ >R , LIT@ >R , R> 0 >R >R ; IMMEDIATE
: ?DO HERE @ LIT@ 2DUP , LIT@ = , LIT@ ?BRANCH , 4 CELLS , LIT@ 2DROP ,
      LIT@ BRANCH , R> HERE @ 0 , LIT@ >R , LIT@ >R , >R 1 >R >R ; IMMEDIATE
: UNLOOP R> R> R> 2DROP >R ;
: LEAVE LIT@ UNLOOP , LIT@ BRANCH , R> R> 1+ HERE @ 0 , >R >R >R ; IMMEDIATE
: LOOP R> R>
       BEGIN DUP 0<> WHILE 1- R> DUP HERE @ SWAP - 8 CELLS + SWAP ! REPEAT
       DROP >R LIT@ R> , LIT@ R> , LIT@ 1+ , LIT@ 2DUP ,
       LIT@ = , LIT@ ?BRANCH , HERE @ - , LIT@ 2DROP , ; IMMEDIATE
: +LOOP R> R>
        BEGIN DUP 0<> WHILE 1- R> DUP HERE @ SWAP - 10 CELLS + SWAP ! REPEAT
        DROP >R LIT@ R> , LIT@ R> , LIT@ ROT , LIT@ + ,
        LIT@ 2DUP , LIT@ > , LIT@ INVERT , LIT@ ?BRANCH ,
        HERE @ - , LIT@ 2DROP , ; IMMEDIATE
: I R> R> R@ SWAP >R SWAP >R ;
: J R> R> R> R> R@ SWAP >R SWAP >R SWAP >R SWAP >R ;

: p 10 1 DO I DUP 5 > IF UNLOOP EXIT THEN LOOP ;

: CASE ;
: OF ;
: ENDOF ;
: ENDCASE ;

: CREATE : LIT@ LIT@ , HERE @ 2 CELLS + , LIT@ EXIT , REVEAL 0 STATE !
: ALLOT HERE @ + HERE ! ;
: VARIABLE CREATE 0 , ;
: CONSTANT CREATE , DOES> @ ;

VARIABLE BASE
: DECIMAL 10 BASE ! ;
: HEX 16 BASE ! ;
DECIMAL

: ?DUP DUP ?BRANCH [ 2 CELLS , ] DUP ;
: PICK DUP 0= IF DROP DUP EXIT THEN SWAP >R 1- RECURSE R> SWAP ;
: ROLL DUP 0= IF DROP EXIT THEN SWAP >R 1- RECURSE R> SWAP ;

: MIN 2DUP > IF SWAP THEN DROP ;
: MAX 2DUP < IF SWAP THEN DROP ;

: BL 32 ;
: CR 10 EMIT ;
: SPACE BL EMIT ;
: SPACES 0 ?DO SPACE LOOP ;

: ( ; IMMEDIATE ( TODO )
: \ ; IMMEDIATE ( TODO )

: LITSTRING R> DUP CELL+ >R ; ( TODO )
: ." [CHAR] " PARSE STATE @ IF
       LIT@ LITSTRING , DUP , 0 DO DUP C@ C, 1+ LOOP DROP LIT@ TYPE ,
     ELSE
       TYPE
     THEN ; IMMEDIATE

: ENVIRONMENT? 2DROP FALSE ;
